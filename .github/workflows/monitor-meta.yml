name: monitor-meta

on:
  schedule:
    - cron: '0 * * * *'
  workflow_dispatch:

jobs:
  monitor-meta:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Pull current GitHub meta
        run: |
          curl -s https://api.github.com/meta -o meta.json
          jq '{hooks, actions, web, api, git, pages, packages}' meta.json > trimmed-meta.json
          sha256sum trimmed-meta.json | cut -d ' ' -f1 > meta.hash

      - name: Load previous data (if any)
        id: baseline
        run: |
          if [ -f .meta.last.json ]; then
            echo "has_baseline=true" >> $GITHUB_OUTPUT
          else
            echo "{}" > .meta.last.json
            echo "has_baseline=false" >> $GITHUB_OUTPUT
          fi

      - name: Save first-time baseline and exit
        if: steps.baseline.outputs.has_baseline == 'false'
        run: |
          echo "Saving initial baseline..."
          cp trimmed-meta.json .meta.last.json
          cp meta.hash .meta.last.hash
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add .meta.last.*
          git commit -m "Initial baseline snapshot"
          git push
          exit 0

      - name: Compare for changes
        id: compare
        run: |
          OLD_HASH=$(cat .meta.last.hash 2>/dev/null || echo "")
          NEW_HASH=$(cat meta.hash)

          echo "old_hash=$OLD_HASH" >> $GITHUB_OUTPUT
          echo "new_hash=$NEW_HASH" >> $GITHUB_OUTPUT

          if [ "$OLD_HASH" != "$NEW_HASH" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Exit if no change
        if: steps.compare.outputs.changed == 'false'
        run: |
          echo "No change detected. Exiting."
          exit 0

      - name: Generate IP diff inline
        run: |
          echo ":rotating_light: **New IP changes detected**" > ip.diff.md
          echo "" >> ip.diff.md

          # Added IPs
          echo "## :heavy_plus_sign: Added IPs" >> ip.diff.md
          jq -r '. as $new | input | to_entries[] | select(.value != $new[.key]) | .key' trimmed-meta.json .meta.last.json |
            while read section; do
              echo "### $section" >> ip.diff.md
              jq -r --arg section "$section" '
                [$section[]] as $new
                | input | [$section[]] as $old
                | ($new - $old)[]?' trimmed-meta.json .meta.last.json |
                sed 's/^/- /' >> ip.diff.md || true
            done

          echo "" >> ip.diff.md

          # Removed IPs
          echo "## :heavy_minus_sign: Removed IPs" >> ip.diff.md
          jq -r '. as $new | input | to_entries[] | select(.value != $new[.key]) | .key' trimmed-meta.json .meta.last.json |
            while read section; do
              echo "### $section" >> ip.diff.md
              jq -r --arg section "$section" '
                [$section[]] as $new
                | input | [$section[]] as $old
                | ($old - $new)[]?' trimmed-meta.json .meta.last.json |
                sed 's/^/- /' >> ip.diff.md || true
            done

      - name: Create issue for IP changes
        uses: peter-evans/create-issue-from-file@v4
        with:
          title: ":rotating_light: GitHub Meta IP Change Detected"
          content-filepath: ip.diff.md
          labels: ip-change, github-meta

      - name: Save new meta for future comparison
        run: |
          cp trimmed-meta.json .meta.last.json
          cp meta.hash .meta.last.hash
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add .meta.last.*
          git commit -m "Updated baseline after detected change"
          git push
